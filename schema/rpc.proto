syntax = "proto3";

package surrealdb.protocol.rpc;

import "schema/value.proto";
import "schema/expr.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";


service SurrealDB {
    rpc Health(HealthRequest) returns (surrealdb.protocol.Value);
    rpc Version(VersionRequest) returns (surrealdb.protocol.Value);

    rpc Query(QueryRequest) returns (ValueBatch);
    rpc QueryStream(QueryRequest) returns (stream ValueBatch);
    rpc Live(LiveRequest) returns (stream LiveNotification);
    
    rpc Info(InfoRequest) returns (surrealdb.protocol.Value);
    rpc Use(UseRequest) returns (surrealdb.protocol.Value);
    rpc Signup(SignupRequest) returns (surrealdb.protocol.Value);
    rpc Signin(SigninRequest) returns (surrealdb.protocol.Value);
    rpc Authenticate(AuthenticateRequest) returns (surrealdb.protocol.Value);
    rpc Invalidate(InvalidateRequest) returns (surrealdb.protocol.Value);
    rpc Reset(ResetRequest) returns (surrealdb.protocol.Value);
    rpc Kill(KillRequest) returns (surrealdb.protocol.Value);
    rpc Set(SetRequest) returns (surrealdb.protocol.Value);
    rpc Unset(UnsetRequest) returns (surrealdb.protocol.Value);
    rpc Select(SelectRequest) returns (ValueBatch);
    rpc Create(CreateRequest) returns (ValueBatch);
    rpc Insert(InsertRequest) returns (ValueBatch);
    rpc Upsert(UpsertRequest) returns (ValueBatch);
    rpc Update(UpdateRequest) returns (ValueBatch);
    rpc Delete(DeleteRequest) returns (ValueBatch);
    rpc Relate(RelateRequest) returns (ValueBatch);
    rpc RunFunction(RunRequest) returns (Value);
    rpc GraphQl(GraphQlRequest) returns (ValueBatch);
}

message HealthRequest {}

message VersionRequest {}

message PingRequest {}

message InfoRequest {}

message UseRequest {
    string namespace = 1;
    string database = 2;
}

message SignupRequest {
    string namespace = 1;
    string database = 2;
    string access_name = 3;
    surrealdb.protocol.Value variables = 4;
}

message RootUserCredentials {
    string username = 1;
    string password = 2;
}

message NamespaceAccessCredentials {
    string namespace = 1;
    string access = 2;
    string key = 3;
}

message DatabaseAccessCredentials {
    string namespace = 1;
    string database = 2;
    string access = 3;
    string key = 4;
    string refresh = 5;
}

message NamespaceUserCredentials {
    string namespace = 1;
    string username = 2;
    string password = 3;
}

message DatabaseUserCredentials {
    string namespace = 1;
    string database = 2;
    string username = 3;
    string password = 4;
}

message AccessToken {
    string token = 1;
}

// Method of authenticating with the database.
message AccessMethod {
    oneof method {
        RootUserCredentials root = 1;
        NamespaceAccessCredentials namespace = 2;
        DatabaseAccessCredentials database = 3;
        NamespaceUserCredentials namespace_user = 4;
        DatabaseUserCredentials database_user = 5;
        AccessToken access_token = 6;
    }
}

message SigninRequest {
    AccessMethod access_method = 1;
}

message AuthenticateRequest {
    string token = 1;
}


message InvalidateRequest {}

message ResetRequest {}

message KillRequest {
    string live_id = 1;
}

message LiveRequest {
    surrealdb.protocol.Value what = 1;
    Fields expr = 2;
    surrealdb.protocol.Value cond = 3;
    surrealdb.protocol.Value fetch = 4;
}

message SetRequest {
    string key = 1;
    surrealdb.protocol.Value value = 2;
}

message UnsetRequest {
    string key = 1;
}

message CreateRequest {
    bool only = 1;
    surrealdb.protocol.Value what = 2;
    surrealdb.protocol.Value data = 3;
    surrealdb.protocol.Value output = 4;
    google.protobuf.Duration timeout = 5;
    bool parallel = 6;
    surrealdb.protocol.Value version = 7;
}

message SelectRequest {
    Fields expr = 1;
    surrealdb.protocol.Value omit = 2;
    bool only = 3;
    surrealdb.protocol.Value what = 4;
    surrealdb.protocol.Value with = 5;
    surrealdb.protocol.Value cond = 6;
    surrealdb.protocol.Value split = 7;
    surrealdb.protocol.Value group = 8;
    surrealdb.protocol.Value order = 9;
    uint64 start = 10;
    uint64 limit = 11;
    surrealdb.protocol.Fetchs fetch = 12;
    surrealdb.protocol.Value version = 13;
    google.protobuf.Duration timeout = 14;
    bool parallel = 15;
    surrealdb.protocol.Value explain = 16;
    bool tempfiles = 17;
    Variables variables = 18;
}

message InsertRequest {
    surrealdb.protocol.Value into = 1;
    surrealdb.protocol.Value data = 2;
    bool ignore = 3;
    surrealdb.protocol.Value update = 4;
    surrealdb.protocol.Value output = 5;
    google.protobuf.Duration timeout = 6;
    bool parallel = 7;
    bool relation = 8;
    surrealdb.protocol.Value version = 9;
}

message UpsertRequest {
    bool only = 1;
    surrealdb.protocol.Value what = 2;
    surrealdb.protocol.Value with = 3;
    surrealdb.protocol.Data data = 4;
    surrealdb.protocol.Value cond = 5;
    surrealdb.protocol.Value output = 6;
    google.protobuf.Duration timeout = 7;
    bool parallel = 8;
    surrealdb.protocol.Value explain = 9;
}

message UpdateRequest {
    bool only = 1;
    surrealdb.protocol.Value what = 2;
    surrealdb.protocol.Value with = 3;
    surrealdb.protocol.Data data = 4;
    surrealdb.protocol.Value cond = 5;
    surrealdb.protocol.Value output = 6;
    google.protobuf.Duration timeout = 7;
    bool parallel = 8;
    surrealdb.protocol.Value explain = 9;
}

message DeleteRequest {
    bool only = 1;
    surrealdb.protocol.Value what = 2;
    surrealdb.protocol.Value with = 3;
    surrealdb.protocol.Value cond = 4;
    surrealdb.protocol.Value output = 5;
    google.protobuf.Duration timeout = 6;
    bool parallel = 7;
    surrealdb.protocol.Value explain = 8;
}

message QueryRequest {
    string query = 1;
    Variables variables = 2;
}

message RelateRequest {
    bool only = 1;
    surrealdb.protocol.Value kind = 2;
    surrealdb.protocol.Value from = 3;
    surrealdb.protocol.Value with = 4;
    bool uniq = 5;
    surrealdb.protocol.Value data = 6;
    surrealdb.protocol.Value output = 7;
    google.protobuf.Duration timeout = 8;
    bool parallel = 9;
}

message RunRequest {
    string name = 1;
    string version = 2;
    repeated surrealdb.protocol.Value args = 3;
}

message GraphQlRequest {
    string query = 1;
    Variables variables = 2;
}

message ValueBatch {
    repeated surrealdb.protocol.Value values = 1;
}

enum Action {
    Create = 0;
    Update = 1;
    Delete = 2;
    Killed = 3;
}

message LiveNotification {
    surrealdb.protocol.UuidValue id = 1;
    Action action = 2;
    surrealdb.protocol.Value record = 3;
    surrealdb.protocol.Value result = 4;
}

message Variables {
    map<string, surrealdb.protocol.Value> variables = 1;
}