/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: surrealdb/protocol/v1/expr.proto */

#ifndef PROTOBUF_C_surrealdb_2fprotocol_2fv1_2fexpr_2eproto__INCLUDED
#define PROTOBUF_C_surrealdb_2fprotocol_2fv1_2fexpr_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "surrealdb/protocol/v1/value.pb-c.h"

typedef struct Surrealdb__Protocol__V1__MethodPart Surrealdb__Protocol__V1__MethodPart;
typedef struct Surrealdb__Protocol__V1__Ident Surrealdb__Protocol__V1__Ident;
typedef struct Surrealdb__Protocol__V1__Fields Surrealdb__Protocol__V1__Fields;
typedef struct Surrealdb__Protocol__V1__Fields__SingleField Surrealdb__Protocol__V1__Fields__SingleField;
typedef struct Surrealdb__Protocol__V1__Fields__Field Surrealdb__Protocol__V1__Fields__Field;
typedef struct Surrealdb__Protocol__V1__Idiom Surrealdb__Protocol__V1__Idiom;
typedef struct Surrealdb__Protocol__V1__Data Surrealdb__Protocol__V1__Data;
typedef struct Surrealdb__Protocol__V1__Data__SetExpr Surrealdb__Protocol__V1__Data__SetExpr;
typedef struct Surrealdb__Protocol__V1__Data__SetMultiExpr Surrealdb__Protocol__V1__Data__SetMultiExpr;
typedef struct Surrealdb__Protocol__V1__Data__UnsetMultiExpr Surrealdb__Protocol__V1__Data__UnsetMultiExpr;
typedef struct Surrealdb__Protocol__V1__Data__IdiomValuePair Surrealdb__Protocol__V1__Data__IdiomValuePair;
typedef struct Surrealdb__Protocol__V1__Data__ValuesExpr Surrealdb__Protocol__V1__Data__ValuesExpr;
typedef struct Surrealdb__Protocol__V1__Data__ValuesMultiExpr Surrealdb__Protocol__V1__Data__ValuesMultiExpr;
typedef struct Surrealdb__Protocol__V1__Fetchs Surrealdb__Protocol__V1__Fetchs;


/* --- enums --- */

typedef enum _Surrealdb__Protocol__V1__Operator {
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_UNSPECIFIED = 0,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_NEG = 1,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_NOT = 2,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_OR = 3,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_AND = 4,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_TCO = 5,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_NCO = 6,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_ADD = 7,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_SUB = 8,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_MUL = 9,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_DIV = 10,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_REM = 11,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_POW = 12,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_INC = 13,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_DEC = 14,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_EXT = 15,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_EQUAL = 16,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_EXACT = 17,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_NOT_EQUAL = 18,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_ALL_EQUAL = 19,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_ANY_EQUAL = 20,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_LIKE = 21,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_NOT_LIKE = 22,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_ALL_LIKE = 23,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_ANY_LIKE = 24,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_LESS_THAN = 25,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_LESS_THAN_OR_EQUAL = 26,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_GREATER_THAN = 27,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_GREATER_THAN_OR_EQUAL = 28,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_CONTAIN = 29,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_NOT_CONTAIN = 30,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_CONTAIN_ALL = 31,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_CONTAIN_ANY = 32,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_CONTAIN_NONE = 33,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_INSIDE = 34,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_NOT_INSIDE = 35,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_ALL_INSIDE = 36,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_ANY_INSIDE = 37,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_NONE_INSIDE = 38,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_OUTSIDE = 39,
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_INTERSECTS = 40
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SURREALDB__PROTOCOL__V1__OPERATOR)
} Surrealdb__Protocol__V1__Operator;

/* --- messages --- */

struct  Surrealdb__Protocol__V1__MethodPart
{
  ProtobufCMessage base;
  char *name;
  size_t n_args;
  Surrealdb__Protocol__V1__Value **args;
};
#define SURREALDB__PROTOCOL__V1__METHOD_PART__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__method_part__descriptor) \
, (char *)protobuf_c_empty_string, 0,NULL }


struct  Surrealdb__Protocol__V1__Ident
{
  ProtobufCMessage base;
  char *value;
};
#define SURREALDB__PROTOCOL__V1__IDENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__ident__descriptor) \
, (char *)protobuf_c_empty_string }


struct  Surrealdb__Protocol__V1__Fields__SingleField
{
  ProtobufCMessage base;
  Surrealdb__Protocol__V1__Value *expr;
  Surrealdb__Protocol__V1__Idiom *alias;
};
#define SURREALDB__PROTOCOL__V1__FIELDS__SINGLE_FIELD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__fields__single_field__descriptor) \
, NULL, NULL }


typedef enum {
  SURREALDB__PROTOCOL__V1__FIELDS__FIELD__FIELD__NOT_SET = 0,
  SURREALDB__PROTOCOL__V1__FIELDS__FIELD__FIELD_ALL = 1,
  SURREALDB__PROTOCOL__V1__FIELDS__FIELD__FIELD_SINGLE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SURREALDB__PROTOCOL__V1__FIELDS__FIELD__FIELD__CASE)
} Surrealdb__Protocol__V1__Fields__Field__FieldCase;

struct  Surrealdb__Protocol__V1__Fields__Field
{
  ProtobufCMessage base;
  Surrealdb__Protocol__V1__Fields__Field__FieldCase field_case;
  union {
    Surrealdb__Protocol__V1__NullValue *all;
    Surrealdb__Protocol__V1__Fields__SingleField *single;
  };
};
#define SURREALDB__PROTOCOL__V1__FIELDS__FIELD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__fields__field__descriptor) \
, SURREALDB__PROTOCOL__V1__FIELDS__FIELD__FIELD__NOT_SET, {0} }


struct  Surrealdb__Protocol__V1__Fields
{
  ProtobufCMessage base;
  protobuf_c_boolean single;
  size_t n_fields;
  Surrealdb__Protocol__V1__Fields__Field **fields;
};
#define SURREALDB__PROTOCOL__V1__FIELDS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__fields__descriptor) \
, 0, 0,NULL }


struct  Surrealdb__Protocol__V1__Idiom
{
  ProtobufCMessage base;
  char *value;
};
#define SURREALDB__PROTOCOL__V1__IDIOM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__idiom__descriptor) \
, (char *)protobuf_c_empty_string }


struct  Surrealdb__Protocol__V1__Data__SetExpr
{
  ProtobufCMessage base;
  Surrealdb__Protocol__V1__Idiom *idiom;
  Surrealdb__Protocol__V1__Operator operator_;
  Surrealdb__Protocol__V1__Value *value;
};
#define SURREALDB__PROTOCOL__V1__DATA__SET_EXPR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__data__set_expr__descriptor) \
, NULL, SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_UNSPECIFIED, NULL }


struct  Surrealdb__Protocol__V1__Data__SetMultiExpr
{
  ProtobufCMessage base;
  size_t n_items;
  Surrealdb__Protocol__V1__Data__SetExpr **items;
};
#define SURREALDB__PROTOCOL__V1__DATA__SET_MULTI_EXPR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__data__set_multi_expr__descriptor) \
, 0,NULL }


struct  Surrealdb__Protocol__V1__Data__UnsetMultiExpr
{
  ProtobufCMessage base;
  size_t n_items;
  Surrealdb__Protocol__V1__Idiom **items;
};
#define SURREALDB__PROTOCOL__V1__DATA__UNSET_MULTI_EXPR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__data__unset_multi_expr__descriptor) \
, 0,NULL }


struct  Surrealdb__Protocol__V1__Data__IdiomValuePair
{
  ProtobufCMessage base;
  Surrealdb__Protocol__V1__Idiom *idiom;
  Surrealdb__Protocol__V1__Value *value;
};
#define SURREALDB__PROTOCOL__V1__DATA__IDIOM_VALUE_PAIR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__data__idiom_value_pair__descriptor) \
, NULL, NULL }


struct  Surrealdb__Protocol__V1__Data__ValuesExpr
{
  ProtobufCMessage base;
  size_t n_items;
  Surrealdb__Protocol__V1__Data__IdiomValuePair **items;
};
#define SURREALDB__PROTOCOL__V1__DATA__VALUES_EXPR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__data__values_expr__descriptor) \
, 0,NULL }


struct  Surrealdb__Protocol__V1__Data__ValuesMultiExpr
{
  ProtobufCMessage base;
  size_t n_items;
  Surrealdb__Protocol__V1__Data__ValuesExpr **items;
};
#define SURREALDB__PROTOCOL__V1__DATA__VALUES_MULTI_EXPR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__data__values_multi_expr__descriptor) \
, 0,NULL }


typedef enum {
  SURREALDB__PROTOCOL__V1__DATA__DATA__NOT_SET = 0,
  SURREALDB__PROTOCOL__V1__DATA__DATA_EMPTY = 1,
  SURREALDB__PROTOCOL__V1__DATA__DATA_SET = 2,
  SURREALDB__PROTOCOL__V1__DATA__DATA_UNSET = 3,
  SURREALDB__PROTOCOL__V1__DATA__DATA_PATCH = 4,
  SURREALDB__PROTOCOL__V1__DATA__DATA_MERGE = 5,
  SURREALDB__PROTOCOL__V1__DATA__DATA_REPLACE = 6,
  SURREALDB__PROTOCOL__V1__DATA__DATA_CONTENT = 7,
  SURREALDB__PROTOCOL__V1__DATA__DATA_VALUE = 8,
  SURREALDB__PROTOCOL__V1__DATA__DATA_VALUES = 9,
  SURREALDB__PROTOCOL__V1__DATA__DATA_UPDATE = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SURREALDB__PROTOCOL__V1__DATA__DATA__CASE)
} Surrealdb__Protocol__V1__Data__DataCase;

struct  Surrealdb__Protocol__V1__Data
{
  ProtobufCMessage base;
  Surrealdb__Protocol__V1__Data__DataCase data_case;
  union {
    Surrealdb__Protocol__V1__Value *content;
    Surrealdb__Protocol__V1__NullValue *empty;
    Surrealdb__Protocol__V1__Value *merge;
    Surrealdb__Protocol__V1__Value *patch;
    Surrealdb__Protocol__V1__Value *replace;
    Surrealdb__Protocol__V1__Data__SetMultiExpr *set;
    Surrealdb__Protocol__V1__Data__UnsetMultiExpr *unset;
    Surrealdb__Protocol__V1__Data__SetMultiExpr *update;
    Surrealdb__Protocol__V1__Value *value;
    Surrealdb__Protocol__V1__Data__ValuesMultiExpr *values;
  };
};
#define SURREALDB__PROTOCOL__V1__DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__data__descriptor) \
, SURREALDB__PROTOCOL__V1__DATA__DATA__NOT_SET, {0} }


struct  Surrealdb__Protocol__V1__Fetchs
{
  ProtobufCMessage base;
  size_t n_items;
  Surrealdb__Protocol__V1__Value **items;
};
#define SURREALDB__PROTOCOL__V1__FETCHS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__fetchs__descriptor) \
, 0,NULL }


/* Surrealdb__Protocol__V1__MethodPart methods */
void   surrealdb__protocol__v1__method_part__init
                     (Surrealdb__Protocol__V1__MethodPart         *message);
size_t surrealdb__protocol__v1__method_part__get_packed_size
                     (const Surrealdb__Protocol__V1__MethodPart   *message);
size_t surrealdb__protocol__v1__method_part__pack
                     (const Surrealdb__Protocol__V1__MethodPart   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__method_part__pack_to_buffer
                     (const Surrealdb__Protocol__V1__MethodPart   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__MethodPart *
       surrealdb__protocol__v1__method_part__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__method_part__free_unpacked
                     (Surrealdb__Protocol__V1__MethodPart *message,
                      ProtobufCAllocator *allocator);
/* Surrealdb__Protocol__V1__Ident methods */
void   surrealdb__protocol__v1__ident__init
                     (Surrealdb__Protocol__V1__Ident         *message);
size_t surrealdb__protocol__v1__ident__get_packed_size
                     (const Surrealdb__Protocol__V1__Ident   *message);
size_t surrealdb__protocol__v1__ident__pack
                     (const Surrealdb__Protocol__V1__Ident   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__ident__pack_to_buffer
                     (const Surrealdb__Protocol__V1__Ident   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__Ident *
       surrealdb__protocol__v1__ident__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__ident__free_unpacked
                     (Surrealdb__Protocol__V1__Ident *message,
                      ProtobufCAllocator *allocator);
/* Surrealdb__Protocol__V1__Fields__SingleField methods */
void   surrealdb__protocol__v1__fields__single_field__init
                     (Surrealdb__Protocol__V1__Fields__SingleField         *message);
/* Surrealdb__Protocol__V1__Fields__Field methods */
void   surrealdb__protocol__v1__fields__field__init
                     (Surrealdb__Protocol__V1__Fields__Field         *message);
/* Surrealdb__Protocol__V1__Fields methods */
void   surrealdb__protocol__v1__fields__init
                     (Surrealdb__Protocol__V1__Fields         *message);
size_t surrealdb__protocol__v1__fields__get_packed_size
                     (const Surrealdb__Protocol__V1__Fields   *message);
size_t surrealdb__protocol__v1__fields__pack
                     (const Surrealdb__Protocol__V1__Fields   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__fields__pack_to_buffer
                     (const Surrealdb__Protocol__V1__Fields   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__Fields *
       surrealdb__protocol__v1__fields__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__fields__free_unpacked
                     (Surrealdb__Protocol__V1__Fields *message,
                      ProtobufCAllocator *allocator);
/* Surrealdb__Protocol__V1__Idiom methods */
void   surrealdb__protocol__v1__idiom__init
                     (Surrealdb__Protocol__V1__Idiom         *message);
size_t surrealdb__protocol__v1__idiom__get_packed_size
                     (const Surrealdb__Protocol__V1__Idiom   *message);
size_t surrealdb__protocol__v1__idiom__pack
                     (const Surrealdb__Protocol__V1__Idiom   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__idiom__pack_to_buffer
                     (const Surrealdb__Protocol__V1__Idiom   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__Idiom *
       surrealdb__protocol__v1__idiom__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__idiom__free_unpacked
                     (Surrealdb__Protocol__V1__Idiom *message,
                      ProtobufCAllocator *allocator);
/* Surrealdb__Protocol__V1__Data__SetExpr methods */
void   surrealdb__protocol__v1__data__set_expr__init
                     (Surrealdb__Protocol__V1__Data__SetExpr         *message);
/* Surrealdb__Protocol__V1__Data__SetMultiExpr methods */
void   surrealdb__protocol__v1__data__set_multi_expr__init
                     (Surrealdb__Protocol__V1__Data__SetMultiExpr         *message);
/* Surrealdb__Protocol__V1__Data__UnsetMultiExpr methods */
void   surrealdb__protocol__v1__data__unset_multi_expr__init
                     (Surrealdb__Protocol__V1__Data__UnsetMultiExpr         *message);
/* Surrealdb__Protocol__V1__Data__IdiomValuePair methods */
void   surrealdb__protocol__v1__data__idiom_value_pair__init
                     (Surrealdb__Protocol__V1__Data__IdiomValuePair         *message);
/* Surrealdb__Protocol__V1__Data__ValuesExpr methods */
void   surrealdb__protocol__v1__data__values_expr__init
                     (Surrealdb__Protocol__V1__Data__ValuesExpr         *message);
/* Surrealdb__Protocol__V1__Data__ValuesMultiExpr methods */
void   surrealdb__protocol__v1__data__values_multi_expr__init
                     (Surrealdb__Protocol__V1__Data__ValuesMultiExpr         *message);
/* Surrealdb__Protocol__V1__Data methods */
void   surrealdb__protocol__v1__data__init
                     (Surrealdb__Protocol__V1__Data         *message);
size_t surrealdb__protocol__v1__data__get_packed_size
                     (const Surrealdb__Protocol__V1__Data   *message);
size_t surrealdb__protocol__v1__data__pack
                     (const Surrealdb__Protocol__V1__Data   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__data__pack_to_buffer
                     (const Surrealdb__Protocol__V1__Data   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__Data *
       surrealdb__protocol__v1__data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__data__free_unpacked
                     (Surrealdb__Protocol__V1__Data *message,
                      ProtobufCAllocator *allocator);
/* Surrealdb__Protocol__V1__Fetchs methods */
void   surrealdb__protocol__v1__fetchs__init
                     (Surrealdb__Protocol__V1__Fetchs         *message);
size_t surrealdb__protocol__v1__fetchs__get_packed_size
                     (const Surrealdb__Protocol__V1__Fetchs   *message);
size_t surrealdb__protocol__v1__fetchs__pack
                     (const Surrealdb__Protocol__V1__Fetchs   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__fetchs__pack_to_buffer
                     (const Surrealdb__Protocol__V1__Fetchs   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__Fetchs *
       surrealdb__protocol__v1__fetchs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__fetchs__free_unpacked
                     (Surrealdb__Protocol__V1__Fetchs *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Surrealdb__Protocol__V1__MethodPart_Closure)
                 (const Surrealdb__Protocol__V1__MethodPart *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Ident_Closure)
                 (const Surrealdb__Protocol__V1__Ident *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Fields__SingleField_Closure)
                 (const Surrealdb__Protocol__V1__Fields__SingleField *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Fields__Field_Closure)
                 (const Surrealdb__Protocol__V1__Fields__Field *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Fields_Closure)
                 (const Surrealdb__Protocol__V1__Fields *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Idiom_Closure)
                 (const Surrealdb__Protocol__V1__Idiom *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Data__SetExpr_Closure)
                 (const Surrealdb__Protocol__V1__Data__SetExpr *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Data__SetMultiExpr_Closure)
                 (const Surrealdb__Protocol__V1__Data__SetMultiExpr *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Data__UnsetMultiExpr_Closure)
                 (const Surrealdb__Protocol__V1__Data__UnsetMultiExpr *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Data__IdiomValuePair_Closure)
                 (const Surrealdb__Protocol__V1__Data__IdiomValuePair *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Data__ValuesExpr_Closure)
                 (const Surrealdb__Protocol__V1__Data__ValuesExpr *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Data__ValuesMultiExpr_Closure)
                 (const Surrealdb__Protocol__V1__Data__ValuesMultiExpr *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Data_Closure)
                 (const Surrealdb__Protocol__V1__Data *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Fetchs_Closure)
                 (const Surrealdb__Protocol__V1__Fetchs *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    surrealdb__protocol__v1__operator__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__method_part__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__ident__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__fields__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__fields__single_field__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__fields__field__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__idiom__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__data__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__data__set_expr__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__data__set_multi_expr__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__data__unset_multi_expr__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__data__idiom_value_pair__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__data__values_expr__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__data__values_multi_expr__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__fetchs__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_surrealdb_2fprotocol_2fv1_2fexpr_2eproto__INCLUDED */
