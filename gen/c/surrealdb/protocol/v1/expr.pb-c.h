/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: surrealdb/protocol/v1/expr.proto */

#ifndef PROTOBUF_C_surrealdb_2fprotocol_2fv1_2fexpr_2eproto__INCLUDED
#define PROTOBUF_C_surrealdb_2fprotocol_2fv1_2fexpr_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif

#include "surrealdb/protocol/v1/value.pb-c.h"

typedef struct Surrealdb__Protocol__V1__Ident Surrealdb__Protocol__V1__Ident;
typedef struct Surrealdb__Protocol__V1__Fields Surrealdb__Protocol__V1__Fields;
typedef struct Surrealdb__Protocol__V1__Fields__SingleField Surrealdb__Protocol__V1__Fields__SingleField;
typedef struct Surrealdb__Protocol__V1__Fields__Field Surrealdb__Protocol__V1__Fields__Field;
typedef struct Surrealdb__Protocol__V1__Idiom Surrealdb__Protocol__V1__Idiom;
typedef struct Surrealdb__Protocol__V1__Data Surrealdb__Protocol__V1__Data;
typedef struct Surrealdb__Protocol__V1__Data__SetExpr Surrealdb__Protocol__V1__Data__SetExpr;
typedef struct Surrealdb__Protocol__V1__Data__SetMultiExpr Surrealdb__Protocol__V1__Data__SetMultiExpr;
typedef struct Surrealdb__Protocol__V1__Data__UnsetMultiExpr Surrealdb__Protocol__V1__Data__UnsetMultiExpr;
typedef struct Surrealdb__Protocol__V1__Data__IdiomValuePair Surrealdb__Protocol__V1__Data__IdiomValuePair;
typedef struct Surrealdb__Protocol__V1__Data__ValuesExpr Surrealdb__Protocol__V1__Data__ValuesExpr;
typedef struct Surrealdb__Protocol__V1__Data__ValuesMultiExpr Surrealdb__Protocol__V1__Data__ValuesMultiExpr;
typedef struct Surrealdb__Protocol__V1__Fetchs Surrealdb__Protocol__V1__Fetchs;
typedef struct Surrealdb__Protocol__V1__Output Surrealdb__Protocol__V1__Output;
typedef struct Surrealdb__Protocol__V1__Explain Surrealdb__Protocol__V1__Explain;
typedef struct Surrealdb__Protocol__V1__Start Surrealdb__Protocol__V1__Start;
typedef struct Surrealdb__Protocol__V1__Limit Surrealdb__Protocol__V1__Limit;
typedef struct Surrealdb__Protocol__V1__Fetch Surrealdb__Protocol__V1__Fetch;
typedef struct Surrealdb__Protocol__V1__With Surrealdb__Protocol__V1__With;


/* --- enums --- */

/*
 * Supported operators.
 * Note: This is a subset of the operators supported by the SurrealQL parser. This only includes operators that do not take arguments.
 */
typedef enum _Surrealdb__Protocol__V1__Operator {
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_UNSPECIFIED = 0,
  /*
   * `-`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_NEG = 1,
  /*
   * `!`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_NOT = 2,
  /*
   * `||`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_OR = 3,
  /*
   * `&&`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_AND = 4,
  /*
   * `?:`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_TCO = 5,
  /*
   * `??`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_NCO = 6,
  /*
   * `+`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_ADD = 7,
  /*
   * `-`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_SUB = 8,
  /*
   * `*`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_MUL = 9,
  /*
   * `/`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_DIV = 10,
  /*
   * `%`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_REM = 11,
  /*
   * `**`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_POW = 12,
  /*
   * `+=`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_INC = 13,
  /*
   * `-=`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_DEC = 14,
  /*
   * `..`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_EXT = 15,
  /*
   * `=`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_EQUAL = 16,
  /*
   * `==`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_EXACT = 17,
  /*
   * `!=`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_NOT_EQUAL = 18,
  /*
   * `*=`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_ALL_EQUAL = 19,
  /*
   * `?=`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_ANY_EQUAL = 20,
  /*
   * `<`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_LESS_THAN = 21,
  /*
   * `<=`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_LESS_THAN_OR_EQUAL = 22,
  /*
   * `>`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_GREATER_THAN = 23,
  /*
   * `>=`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_GREATER_THAN_OR_EQUAL = 24,
  /*
   * `∋`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_CONTAIN = 25,
  /*
   * `∌`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_NOT_CONTAIN = 26,
  /*
   * `⊇`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_CONTAIN_ALL = 27,
  /*
   * `⊃`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_CONTAIN_ANY = 28,
  /*
   * `⊅`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_CONTAIN_NONE = 29,
  /*
   * `∈`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_INSIDE = 30,
  /*
   * `∉`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_NOT_INSIDE = 31,
  /*
   * `⊆`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_ALL_INSIDE = 32,
  /*
   * `⊂`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_ANY_INSIDE = 33,
  /*
   * `⊄`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_NONE_INSIDE = 34,
  /*
   * `OUTSIDE`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_OUTSIDE = 35,
  /*
   * `INTERSECTS`
   */
  SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_INTERSECTS = 36
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SURREALDB__PROTOCOL__V1__OPERATOR)
} Surrealdb__Protocol__V1__Operator;

/* --- messages --- */

/*
 * Identifier.
 */
struct  Surrealdb__Protocol__V1__Ident
{
  ProtobufCMessage base;
  char *value;
};
#define SURREALDB__PROTOCOL__V1__IDENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__ident__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * Single field.
 */
struct  Surrealdb__Protocol__V1__Fields__SingleField
{
  ProtobufCMessage base;
  /*
   * Expression.
   */
  Surrealdb__Protocol__V1__Value *expr;
  /*
   * Alias.
   */
  Surrealdb__Protocol__V1__Idiom *alias;
};
#define SURREALDB__PROTOCOL__V1__FIELDS__SINGLE_FIELD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__fields__single_field__descriptor) \
, NULL, NULL }


typedef enum {
  SURREALDB__PROTOCOL__V1__FIELDS__FIELD__FIELD__NOT_SET = 0,
  SURREALDB__PROTOCOL__V1__FIELDS__FIELD__FIELD_ALL = 1,
  SURREALDB__PROTOCOL__V1__FIELDS__FIELD__FIELD_SINGLE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SURREALDB__PROTOCOL__V1__FIELDS__FIELD__FIELD__CASE)
} Surrealdb__Protocol__V1__Fields__Field__FieldCase;

/*
 * Field selection.
 */
struct  Surrealdb__Protocol__V1__Fields__Field
{
  ProtobufCMessage base;
  Surrealdb__Protocol__V1__Fields__Field__FieldCase field_case;
  union {
    /*
     * All fields.
     */
    Surrealdb__Protocol__V1__NullValue *all;
    /*
     * Single field.
     */
    Surrealdb__Protocol__V1__Fields__SingleField *single;
  };
};
#define SURREALDB__PROTOCOL__V1__FIELDS__FIELD__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__fields__field__descriptor) \
, SURREALDB__PROTOCOL__V1__FIELDS__FIELD__FIELD__NOT_SET, {0} }


/*
 * Fields selection.
 */
struct  Surrealdb__Protocol__V1__Fields
{
  ProtobufCMessage base;
  /*
   * Whether this is a single VALUE clause.
   */
  protobuf_c_boolean single;
  /*
   * Field selection.
   */
  size_t n_fields;
  Surrealdb__Protocol__V1__Fields__Field **fields;
};
#define SURREALDB__PROTOCOL__V1__FIELDS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__fields__descriptor) \
, 0, 0,NULL }


/*
 * Idiom which represents a field expression (e.g. `a.b.c` or `a.b[0]`).
 */
struct  Surrealdb__Protocol__V1__Idiom
{
  ProtobufCMessage base;
  char *value;
};
#define SURREALDB__PROTOCOL__V1__IDIOM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__idiom__descriptor) \
, (char *)protobuf_c_empty_string }


/*
 * Set expression (e.g. `a = 1` or `a.b += 1`).
 */
struct  Surrealdb__Protocol__V1__Data__SetExpr
{
  ProtobufCMessage base;
  /*
   * Idiom.
   */
  Surrealdb__Protocol__V1__Idiom *idiom;
  /*
   * Operator.
   */
  Surrealdb__Protocol__V1__Operator operator_;
  /*
   * Value.
   */
  Surrealdb__Protocol__V1__Value *value;
};
#define SURREALDB__PROTOCOL__V1__DATA__SET_EXPR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__data__set_expr__descriptor) \
, NULL, SURREALDB__PROTOCOL__V1__OPERATOR__OPERATOR_UNSPECIFIED, NULL }


/*
 * Set multiple expressions.
 */
struct  Surrealdb__Protocol__V1__Data__SetMultiExpr
{
  ProtobufCMessage base;
  size_t n_items;
  Surrealdb__Protocol__V1__Data__SetExpr **items;
};
#define SURREALDB__PROTOCOL__V1__DATA__SET_MULTI_EXPR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__data__set_multi_expr__descriptor) \
, 0,NULL }


/*
 * Unset multiple expressions.
 */
struct  Surrealdb__Protocol__V1__Data__UnsetMultiExpr
{
  ProtobufCMessage base;
  size_t n_items;
  Surrealdb__Protocol__V1__Idiom **items;
};
#define SURREALDB__PROTOCOL__V1__DATA__UNSET_MULTI_EXPR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__data__unset_multi_expr__descriptor) \
, 0,NULL }


/*
 * Idiom and value pair.
 */
struct  Surrealdb__Protocol__V1__Data__IdiomValuePair
{
  ProtobufCMessage base;
  Surrealdb__Protocol__V1__Idiom *idiom;
  Surrealdb__Protocol__V1__Value *value;
};
#define SURREALDB__PROTOCOL__V1__DATA__IDIOM_VALUE_PAIR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__data__idiom_value_pair__descriptor) \
, NULL, NULL }


/*
 * Values expression.
 */
struct  Surrealdb__Protocol__V1__Data__ValuesExpr
{
  ProtobufCMessage base;
  size_t n_items;
  Surrealdb__Protocol__V1__Data__IdiomValuePair **items;
};
#define SURREALDB__PROTOCOL__V1__DATA__VALUES_EXPR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__data__values_expr__descriptor) \
, 0,NULL }


/*
 * Values multiple expressions.
 */
struct  Surrealdb__Protocol__V1__Data__ValuesMultiExpr
{
  ProtobufCMessage base;
  size_t n_items;
  Surrealdb__Protocol__V1__Data__ValuesExpr **items;
};
#define SURREALDB__PROTOCOL__V1__DATA__VALUES_MULTI_EXPR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__data__values_multi_expr__descriptor) \
, 0,NULL }


typedef enum {
  SURREALDB__PROTOCOL__V1__DATA__DATA__NOT_SET = 0,
  SURREALDB__PROTOCOL__V1__DATA__DATA_EMPTY = 1,
  SURREALDB__PROTOCOL__V1__DATA__DATA_SET = 2,
  SURREALDB__PROTOCOL__V1__DATA__DATA_UNSET = 3,
  SURREALDB__PROTOCOL__V1__DATA__DATA_PATCH = 4,
  SURREALDB__PROTOCOL__V1__DATA__DATA_MERGE = 5,
  SURREALDB__PROTOCOL__V1__DATA__DATA_REPLACE = 6,
  SURREALDB__PROTOCOL__V1__DATA__DATA_CONTENT = 7,
  SURREALDB__PROTOCOL__V1__DATA__DATA_VALUE = 8,
  SURREALDB__PROTOCOL__V1__DATA__DATA_VALUES = 9,
  SURREALDB__PROTOCOL__V1__DATA__DATA_UPDATE = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SURREALDB__PROTOCOL__V1__DATA__DATA__CASE)
} Surrealdb__Protocol__V1__Data__DataCase;

/*
 * Data expression.
 */
struct  Surrealdb__Protocol__V1__Data
{
  ProtobufCMessage base;
  Surrealdb__Protocol__V1__Data__DataCase data_case;
  union {
    Surrealdb__Protocol__V1__Value *content;
    Surrealdb__Protocol__V1__NullValue *empty;
    Surrealdb__Protocol__V1__Value *merge;
    Surrealdb__Protocol__V1__Value *patch;
    Surrealdb__Protocol__V1__Value *replace;
    Surrealdb__Protocol__V1__Data__SetMultiExpr *set;
    Surrealdb__Protocol__V1__Data__UnsetMultiExpr *unset;
    Surrealdb__Protocol__V1__Data__SetMultiExpr *update;
    Surrealdb__Protocol__V1__Value *value;
    Surrealdb__Protocol__V1__Data__ValuesMultiExpr *values;
  };
};
#define SURREALDB__PROTOCOL__V1__DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__data__descriptor) \
, SURREALDB__PROTOCOL__V1__DATA__DATA__NOT_SET, {0} }


/*
 * Fetchs expression.
 */
struct  Surrealdb__Protocol__V1__Fetchs
{
  ProtobufCMessage base;
  size_t n_items;
  Surrealdb__Protocol__V1__Value **items;
};
#define SURREALDB__PROTOCOL__V1__FETCHS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__fetchs__descriptor) \
, 0,NULL }


typedef enum {
  SURREALDB__PROTOCOL__V1__OUTPUT__OUTPUT__NOT_SET = 0,
  SURREALDB__PROTOCOL__V1__OUTPUT__OUTPUT_NULL = 1,
  SURREALDB__PROTOCOL__V1__OUTPUT__OUTPUT_DIFF = 2,
  SURREALDB__PROTOCOL__V1__OUTPUT__OUTPUT_AFTER = 3,
  SURREALDB__PROTOCOL__V1__OUTPUT__OUTPUT_BEFORE = 4,
  SURREALDB__PROTOCOL__V1__OUTPUT__OUTPUT_FIELDS = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SURREALDB__PROTOCOL__V1__OUTPUT__OUTPUT__CASE)
} Surrealdb__Protocol__V1__Output__OutputCase;

struct  Surrealdb__Protocol__V1__Output
{
  ProtobufCMessage base;
  Surrealdb__Protocol__V1__Output__OutputCase output_case;
  union {
    Surrealdb__Protocol__V1__NullValue *after;
    Surrealdb__Protocol__V1__NullValue *before;
    Surrealdb__Protocol__V1__NullValue *diff;
    Surrealdb__Protocol__V1__Fields *fields;
    Surrealdb__Protocol__V1__NullValue *null;
  };
};
#define SURREALDB__PROTOCOL__V1__OUTPUT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__output__descriptor) \
, SURREALDB__PROTOCOL__V1__OUTPUT__OUTPUT__NOT_SET, {0} }


/*
 * Wrapper for explain in order to make it optional.
 */
struct  Surrealdb__Protocol__V1__Explain
{
  ProtobufCMessage base;
  protobuf_c_boolean explain;
};
#define SURREALDB__PROTOCOL__V1__EXPLAIN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__explain__descriptor) \
, 0 }


/*
 * Wrapper for start in order to make it optional.
 */
struct  Surrealdb__Protocol__V1__Start
{
  ProtobufCMessage base;
  uint64_t start;
};
#define SURREALDB__PROTOCOL__V1__START__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__start__descriptor) \
, 0 }


/*
 * Wrapper for limit in order to make it optional.
 */
struct  Surrealdb__Protocol__V1__Limit
{
  ProtobufCMessage base;
  uint64_t limit;
};
#define SURREALDB__PROTOCOL__V1__LIMIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__limit__descriptor) \
, 0 }


struct  Surrealdb__Protocol__V1__Fetch
{
  ProtobufCMessage base;
  Surrealdb__Protocol__V1__Fetchs *fetch;
};
#define SURREALDB__PROTOCOL__V1__FETCH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__fetch__descriptor) \
, NULL }


struct  Surrealdb__Protocol__V1__With
{
  ProtobufCMessage base;
  /*
   * Indices to use. If not specified, use no indexes
   */
  size_t n_indexes;
  char **indexes;
};
#define SURREALDB__PROTOCOL__V1__WITH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&surrealdb__protocol__v1__with__descriptor) \
, 0,NULL }


/* Surrealdb__Protocol__V1__Ident methods */
void   surrealdb__protocol__v1__ident__init
                     (Surrealdb__Protocol__V1__Ident         *message);
size_t surrealdb__protocol__v1__ident__get_packed_size
                     (const Surrealdb__Protocol__V1__Ident   *message);
size_t surrealdb__protocol__v1__ident__pack
                     (const Surrealdb__Protocol__V1__Ident   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__ident__pack_to_buffer
                     (const Surrealdb__Protocol__V1__Ident   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__Ident *
       surrealdb__protocol__v1__ident__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__ident__free_unpacked
                     (Surrealdb__Protocol__V1__Ident *message,
                      ProtobufCAllocator *allocator);
/* Surrealdb__Protocol__V1__Fields__SingleField methods */
void   surrealdb__protocol__v1__fields__single_field__init
                     (Surrealdb__Protocol__V1__Fields__SingleField         *message);
/* Surrealdb__Protocol__V1__Fields__Field methods */
void   surrealdb__protocol__v1__fields__field__init
                     (Surrealdb__Protocol__V1__Fields__Field         *message);
/* Surrealdb__Protocol__V1__Fields methods */
void   surrealdb__protocol__v1__fields__init
                     (Surrealdb__Protocol__V1__Fields         *message);
size_t surrealdb__protocol__v1__fields__get_packed_size
                     (const Surrealdb__Protocol__V1__Fields   *message);
size_t surrealdb__protocol__v1__fields__pack
                     (const Surrealdb__Protocol__V1__Fields   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__fields__pack_to_buffer
                     (const Surrealdb__Protocol__V1__Fields   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__Fields *
       surrealdb__protocol__v1__fields__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__fields__free_unpacked
                     (Surrealdb__Protocol__V1__Fields *message,
                      ProtobufCAllocator *allocator);
/* Surrealdb__Protocol__V1__Idiom methods */
void   surrealdb__protocol__v1__idiom__init
                     (Surrealdb__Protocol__V1__Idiom         *message);
size_t surrealdb__protocol__v1__idiom__get_packed_size
                     (const Surrealdb__Protocol__V1__Idiom   *message);
size_t surrealdb__protocol__v1__idiom__pack
                     (const Surrealdb__Protocol__V1__Idiom   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__idiom__pack_to_buffer
                     (const Surrealdb__Protocol__V1__Idiom   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__Idiom *
       surrealdb__protocol__v1__idiom__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__idiom__free_unpacked
                     (Surrealdb__Protocol__V1__Idiom *message,
                      ProtobufCAllocator *allocator);
/* Surrealdb__Protocol__V1__Data__SetExpr methods */
void   surrealdb__protocol__v1__data__set_expr__init
                     (Surrealdb__Protocol__V1__Data__SetExpr         *message);
/* Surrealdb__Protocol__V1__Data__SetMultiExpr methods */
void   surrealdb__protocol__v1__data__set_multi_expr__init
                     (Surrealdb__Protocol__V1__Data__SetMultiExpr         *message);
/* Surrealdb__Protocol__V1__Data__UnsetMultiExpr methods */
void   surrealdb__protocol__v1__data__unset_multi_expr__init
                     (Surrealdb__Protocol__V1__Data__UnsetMultiExpr         *message);
/* Surrealdb__Protocol__V1__Data__IdiomValuePair methods */
void   surrealdb__protocol__v1__data__idiom_value_pair__init
                     (Surrealdb__Protocol__V1__Data__IdiomValuePair         *message);
/* Surrealdb__Protocol__V1__Data__ValuesExpr methods */
void   surrealdb__protocol__v1__data__values_expr__init
                     (Surrealdb__Protocol__V1__Data__ValuesExpr         *message);
/* Surrealdb__Protocol__V1__Data__ValuesMultiExpr methods */
void   surrealdb__protocol__v1__data__values_multi_expr__init
                     (Surrealdb__Protocol__V1__Data__ValuesMultiExpr         *message);
/* Surrealdb__Protocol__V1__Data methods */
void   surrealdb__protocol__v1__data__init
                     (Surrealdb__Protocol__V1__Data         *message);
size_t surrealdb__protocol__v1__data__get_packed_size
                     (const Surrealdb__Protocol__V1__Data   *message);
size_t surrealdb__protocol__v1__data__pack
                     (const Surrealdb__Protocol__V1__Data   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__data__pack_to_buffer
                     (const Surrealdb__Protocol__V1__Data   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__Data *
       surrealdb__protocol__v1__data__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__data__free_unpacked
                     (Surrealdb__Protocol__V1__Data *message,
                      ProtobufCAllocator *allocator);
/* Surrealdb__Protocol__V1__Fetchs methods */
void   surrealdb__protocol__v1__fetchs__init
                     (Surrealdb__Protocol__V1__Fetchs         *message);
size_t surrealdb__protocol__v1__fetchs__get_packed_size
                     (const Surrealdb__Protocol__V1__Fetchs   *message);
size_t surrealdb__protocol__v1__fetchs__pack
                     (const Surrealdb__Protocol__V1__Fetchs   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__fetchs__pack_to_buffer
                     (const Surrealdb__Protocol__V1__Fetchs   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__Fetchs *
       surrealdb__protocol__v1__fetchs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__fetchs__free_unpacked
                     (Surrealdb__Protocol__V1__Fetchs *message,
                      ProtobufCAllocator *allocator);
/* Surrealdb__Protocol__V1__Output methods */
void   surrealdb__protocol__v1__output__init
                     (Surrealdb__Protocol__V1__Output         *message);
size_t surrealdb__protocol__v1__output__get_packed_size
                     (const Surrealdb__Protocol__V1__Output   *message);
size_t surrealdb__protocol__v1__output__pack
                     (const Surrealdb__Protocol__V1__Output   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__output__pack_to_buffer
                     (const Surrealdb__Protocol__V1__Output   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__Output *
       surrealdb__protocol__v1__output__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__output__free_unpacked
                     (Surrealdb__Protocol__V1__Output *message,
                      ProtobufCAllocator *allocator);
/* Surrealdb__Protocol__V1__Explain methods */
void   surrealdb__protocol__v1__explain__init
                     (Surrealdb__Protocol__V1__Explain         *message);
size_t surrealdb__protocol__v1__explain__get_packed_size
                     (const Surrealdb__Protocol__V1__Explain   *message);
size_t surrealdb__protocol__v1__explain__pack
                     (const Surrealdb__Protocol__V1__Explain   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__explain__pack_to_buffer
                     (const Surrealdb__Protocol__V1__Explain   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__Explain *
       surrealdb__protocol__v1__explain__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__explain__free_unpacked
                     (Surrealdb__Protocol__V1__Explain *message,
                      ProtobufCAllocator *allocator);
/* Surrealdb__Protocol__V1__Start methods */
void   surrealdb__protocol__v1__start__init
                     (Surrealdb__Protocol__V1__Start         *message);
size_t surrealdb__protocol__v1__start__get_packed_size
                     (const Surrealdb__Protocol__V1__Start   *message);
size_t surrealdb__protocol__v1__start__pack
                     (const Surrealdb__Protocol__V1__Start   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__start__pack_to_buffer
                     (const Surrealdb__Protocol__V1__Start   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__Start *
       surrealdb__protocol__v1__start__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__start__free_unpacked
                     (Surrealdb__Protocol__V1__Start *message,
                      ProtobufCAllocator *allocator);
/* Surrealdb__Protocol__V1__Limit methods */
void   surrealdb__protocol__v1__limit__init
                     (Surrealdb__Protocol__V1__Limit         *message);
size_t surrealdb__protocol__v1__limit__get_packed_size
                     (const Surrealdb__Protocol__V1__Limit   *message);
size_t surrealdb__protocol__v1__limit__pack
                     (const Surrealdb__Protocol__V1__Limit   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__limit__pack_to_buffer
                     (const Surrealdb__Protocol__V1__Limit   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__Limit *
       surrealdb__protocol__v1__limit__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__limit__free_unpacked
                     (Surrealdb__Protocol__V1__Limit *message,
                      ProtobufCAllocator *allocator);
/* Surrealdb__Protocol__V1__Fetch methods */
void   surrealdb__protocol__v1__fetch__init
                     (Surrealdb__Protocol__V1__Fetch         *message);
size_t surrealdb__protocol__v1__fetch__get_packed_size
                     (const Surrealdb__Protocol__V1__Fetch   *message);
size_t surrealdb__protocol__v1__fetch__pack
                     (const Surrealdb__Protocol__V1__Fetch   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__fetch__pack_to_buffer
                     (const Surrealdb__Protocol__V1__Fetch   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__Fetch *
       surrealdb__protocol__v1__fetch__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__fetch__free_unpacked
                     (Surrealdb__Protocol__V1__Fetch *message,
                      ProtobufCAllocator *allocator);
/* Surrealdb__Protocol__V1__With methods */
void   surrealdb__protocol__v1__with__init
                     (Surrealdb__Protocol__V1__With         *message);
size_t surrealdb__protocol__v1__with__get_packed_size
                     (const Surrealdb__Protocol__V1__With   *message);
size_t surrealdb__protocol__v1__with__pack
                     (const Surrealdb__Protocol__V1__With   *message,
                      uint8_t             *out);
size_t surrealdb__protocol__v1__with__pack_to_buffer
                     (const Surrealdb__Protocol__V1__With   *message,
                      ProtobufCBuffer     *buffer);
Surrealdb__Protocol__V1__With *
       surrealdb__protocol__v1__with__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   surrealdb__protocol__v1__with__free_unpacked
                     (Surrealdb__Protocol__V1__With *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Surrealdb__Protocol__V1__Ident_Closure)
                 (const Surrealdb__Protocol__V1__Ident *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Fields__SingleField_Closure)
                 (const Surrealdb__Protocol__V1__Fields__SingleField *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Fields__Field_Closure)
                 (const Surrealdb__Protocol__V1__Fields__Field *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Fields_Closure)
                 (const Surrealdb__Protocol__V1__Fields *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Idiom_Closure)
                 (const Surrealdb__Protocol__V1__Idiom *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Data__SetExpr_Closure)
                 (const Surrealdb__Protocol__V1__Data__SetExpr *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Data__SetMultiExpr_Closure)
                 (const Surrealdb__Protocol__V1__Data__SetMultiExpr *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Data__UnsetMultiExpr_Closure)
                 (const Surrealdb__Protocol__V1__Data__UnsetMultiExpr *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Data__IdiomValuePair_Closure)
                 (const Surrealdb__Protocol__V1__Data__IdiomValuePair *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Data__ValuesExpr_Closure)
                 (const Surrealdb__Protocol__V1__Data__ValuesExpr *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Data__ValuesMultiExpr_Closure)
                 (const Surrealdb__Protocol__V1__Data__ValuesMultiExpr *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Data_Closure)
                 (const Surrealdb__Protocol__V1__Data *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Fetchs_Closure)
                 (const Surrealdb__Protocol__V1__Fetchs *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Output_Closure)
                 (const Surrealdb__Protocol__V1__Output *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Explain_Closure)
                 (const Surrealdb__Protocol__V1__Explain *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Start_Closure)
                 (const Surrealdb__Protocol__V1__Start *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Limit_Closure)
                 (const Surrealdb__Protocol__V1__Limit *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__Fetch_Closure)
                 (const Surrealdb__Protocol__V1__Fetch *message,
                  void *closure_data);
typedef void (*Surrealdb__Protocol__V1__With_Closure)
                 (const Surrealdb__Protocol__V1__With *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    surrealdb__protocol__v1__operator__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__ident__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__fields__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__fields__single_field__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__fields__field__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__idiom__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__data__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__data__set_expr__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__data__set_multi_expr__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__data__unset_multi_expr__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__data__idiom_value_pair__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__data__values_expr__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__data__values_multi_expr__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__fetchs__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__output__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__explain__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__start__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__limit__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__fetch__descriptor;
extern const ProtobufCMessageDescriptor surrealdb__protocol__v1__with__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_surrealdb_2fprotocol_2fv1_2fexpr_2eproto__INCLUDED */
